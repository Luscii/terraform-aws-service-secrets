name: Promote Release
on:
  workflow_call:
    inputs:
      ref:
        type: string
        description: 'The ref to promote'
        required: true
      type:
        description: Type of release
        required: true
        type: string

jobs:
  latest-release:
    runs-on: ubuntu-latest
    if: inputs.type == 'latest'
    steps:
      - name: Get Release
        id: get-release
        uses: boite-nl/query-release-action@v1.0.2
        with:
          select: ${{ inputs.ref }}

  create-tags:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ inputs.ref }}
      - name: get SHA and retrieve all tags
        id: sha
        run: |
          echo "commit=$(git log -1 --format='%H')" >> $GITHUB_OUTPUT
          git fetch --prune --unshallow --tags
      - name: Generate tags
        id: tags
        uses: actions/github-script@v6
        if: inputs.type == 'latest'
        with:
          script: |
            const version = "${{ inputs.ref }}"
            const major = version.split('.')[0]
            const minor = version.split('.')[1]

            core.setOutput('major', major)
            core.setOutput('minor', [major, minor].join('.'))
      - name: Set tag - ${{ inputs.type }}
        uses: rickstaa/action-create-tag@v1.6.1
        id: tag
        with:
          tag: ${{ inputs.type }}
          force_push_tag: true
          commit_sha: ${{ steps.sha.outputs.commit }}
      - name: Set tag - Major
        uses: rickstaa/action-create-tag@v1.6.1
        if: inputs.type == 'latest'
        id: major
        with:
          tag: ${{ steps.tags.outputs.major }}
          force_push_tag: true
          commit_sha: ${{ steps.sha.outputs.commit }}
      - name: Set tag - Minor
        uses: rickstaa/action-create-tag@v1.6.1
        if: inputs.type == 'latest'
        id: minor
        with:
          tag: ${{ steps.tags.outputs.minor }}
          force_push_tag: true
          commit_sha: ${{ steps.sha.outputs.commit }}
